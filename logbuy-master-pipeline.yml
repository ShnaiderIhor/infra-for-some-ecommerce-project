Resources:

  PackageBucket:
    Type: AWS::S3::Bucket
      
  PipelineBucket:
    Type: AWS::S3::Bucket 

  CodeBuildRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: CodeBuildRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: Policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: '*'
              - Effect: Allow
                Action:
                  - "s3:PutObject"
                Resource: 
                  - !Sub ${PackageBucket.Arn}/*
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                Resource: !Sub ${PipelineBucket.Arn}/*
              

  CodePipelineRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: CodePipelineRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Action:
              - 'iam:PassRole'
              Effect: Allow
              Resource: !ImportValue CloudFormationPowerRole
            - Effect: Allow
              Action:
              - 'codebuild:StartBuild'
              - 'codebuild:BatchGetBuilds'
              Resource: '*'
            - Action:
              - 's3:*'
              Effect: Allow
              Resource: !Sub ${PipelineBucket.Arn}/*
            - Action:
              - 'codestar-connections:UseConnection'
              Effect: Allow
              Resource: "*"
            - Action:
              - 'cloudformation:DescribeStacks'
              - 'cloudformation:UpdateStack'
              - 'cloudformation:CreateStack'
              Effect: Allow
              Resource: "*"

  CodeBuildLogGroup: 
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: /aws/codebuild/LogbuyMasterPipeline
      RetentionInDays: 90

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: LogbuyInfrastructure
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables:
          - Name: OUTPUT_PACKAGE_S3_BUCKET
            Type: PLAINTEXT
            Value: !Ref PackageBucket
      Source:
        Type: CODEPIPELINE
      LogsConfig:
        CloudWatchLogs: 
          GroupName: !Ref CodeBuildLogGroup
          Status: ENABLED

              
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: logbuy-cloudformation-deploy
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Location: !Ref PipelineBucket
        Type: S3
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              OutputArtifacts: 
                - Name: SourceArtifact
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                ConnectionArn: '{{resolve:ssm:/Logbuy/General/BitbucketConnectionArn:1}}' 
                FullRepositoryId: logbuyrepo/logbuy-infrastructure
                BranchName: !ImportValue BranchName
                OutputArtifactFormat: CODE_ZIP
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref BuildProject
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
        - Name: Deploy
          Actions:
            - Name: Deploy
              InputArtifacts:
              - Name: BuildArtifact
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
                RoleArn: !ImportValue CloudFormationPowerRole
                StackName: logbuy-master-stack
                TemplatePath: 'BuildArtifact::outputtemplate.yml'


Outputs:
  S3PackagesBucketName:
    Value: !Ref  PackageBucket
    Export:
      Name: 'S3PackagesBucketName'

  S3PackagesBucketArn:
    Value: !GetAtt PackageBucket.Arn
    Export:
      Name: 'S3PackagesBucketArn'

  S3PipelineBucketName:
    Value: !Ref PipelineBucket
    Export:
      Name: 'S3PipelineBucketName'

  CodeBuildRoleArn:
    Value: !GetAtt CodeBuildRole.Arn
    Export:
      Name: 'CodeBuildRoleArn'

  CodePipelineRoleArn:
    Value: !GetAtt CodePipelineRole.Arn
    Export:
      Name: 'CodePipelineRoleArn'